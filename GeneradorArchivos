package fundamentosProgramacion;

import java.io.FileWriter;
import java.io.IOException;
import java.util.Random;

public class GenerateInfoFiles {
	// Método para generar un archivo plano pseudoaleatorio de ventas de un vendedor
    public static void createSalesMenFile(int randomSalesCount, String name, long id) {
        Random random = new Random();
        try (FileWriter writer = new FileWriter("salesmen_" + id + ".txt")) {
            for (int i = 0; i < randomSalesCount; i++) {
                writer.write("CC;" + id + "\n");
                for (int j = 0; j < random.nextInt(10) + 1; j++) {
                    int productId = random.nextInt(100) + 1; // Id de producto aleatorio entre 1 y 100
                    int quantity = random.nextInt(100) + 1; // Cantidad vendida aleatoria entre 1 y 100
                    writer.write(productId + ";" + quantity + "\n");
                }
            }
            System.out.println("Archivo de ventas del vendedor " + name + " creado correctamente.");
        } catch (IOException e) {
            System.err.println("Error al crear el archivo de ventas del vendedor " + name + ": " + e.getMessage());
        }
    }

    // Método para crear un archivo con información pseudoaleatoria de productos
    public static void createProductsFile(int productsCount) {
        Random random = new Random();
        try (FileWriter writer = new FileWriter("products.txt")) {
            for (int i = 0; i < productsCount; i++) {
                int productId = i + 1; // ID de producto incremental
                String productName = "Product_" + productId; // Nombre de producto
                double price = random.nextDouble() * 1000; // Precio aleatorio entre 0 y 1000
                writer.write(productId + ";" + productName + ";" + price + "\n");
            }
            System.out.println("Archivo de productos creado correctamente.");
        } catch (IOException e) {
            System.err.println("Error al crear el archivo de productos: " + e.getMessage());
        }
    }

    // Método para crear un archivo con información pseudoaleatoria de vendedores
    public static void createSalesManInfoFile(int salesmanCount) {
        Random random = new Random();
        String[] names = {"alexis", "Alice", "Michael", "Emma", "Daniel", "Olivia", "David", "Sophia", "James", "Emily"};
        String[] lastNames = {"Smith", "Johnson", "Williams", "Jones", "Brown", "Davis", "Miller", "Wilson", "Moore", "Taylor"};
        try (FileWriter writer = new FileWriter("salesmen_info.txt")) {
            for (int i = 0; i < salesmanCount; i++) {
                int documentType = random.nextInt(2) + 1; // Tipo de documento aleatorio entre 1 y 2
                long documentNumber = random.nextLong(); // Número de documento aleatorio
                String name = names[random.nextInt(names.length)]; // Nombre aleatorio de la lista
                String lastName = lastNames[random.nextInt(lastNames.length)]; // Apellido aleatorio de la lista
                writer.write(documentType + ";" + documentNumber + ";" + name + ";" + lastName + "\n");
            }
            System.out.println("Archivo de información de vendedores creado correctamente.");
        } catch (IOException e) {
            System.err.println("Error al crear el archivo de información de vendedores: " + e.getMessage());
        }
    }

    public static void main(String[] args) {
        // Ejemplo de uso
        createSalesMenFile(10, "alexis", 123456789);
        createProductsFile(20);
        createSalesManInfoFile(5);
    }
}
